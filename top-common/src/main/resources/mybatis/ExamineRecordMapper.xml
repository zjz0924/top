<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wow.common.dao.ExamineRecordDao">
	<resultMap id="BaseResultMap" type="cn.wow.common.domain.ExamineRecord">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="t_id" property="tId" jdbcType="BIGINT" />
		<result column="a_id" property="aId" jdbcType="BIGINT" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="catagory" property="catagory" jdbcType="INTEGER" />
		<result column="task_type" property="taskType" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="base_columns">
		id, t_id, a_id, state, remark, create_time, type, catagory, task_type
	</sql>
	
	<select id="selectOne" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="base_columns" /> from examine_record
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from examine_record where id = #{id,jdbcType=BIGINT}
	</delete>
	
	<insert id="insert" parameterType="cn.wow.common.domain.ExamineRecord">
		insert into examine_record (t_id, a_id, state, remark, create_time, type, catagory, task_type)
		values (#{tId,jdbcType=BIGINT}, #{aId,jdbcType=BIGINT}, #{state,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{catagory,jdbcType=INTEGER}, #{taskType,jdbcType=INTEGER})
	</insert>
	
	<update id="update" parameterType="cn.wow.common.domain.ExamineRecord">
		update examine_record
		<set>
			<if test="tId != null">
				t_id = #{tId,jdbcType=BIGINT},
			</if>
			<if test="aId != null">
				a_id = #{aId,jdbcType=BIGINT},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="catagory != null">
				catagory = #{catagory,jdbcType=INTEGER},
			</if>
			<if test="taskType != null">
				task_type = #{taskType,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 获取taskId -->
	<select id="selectTaskIdList" resultType="java.lang.Long" parameterType="java.util.Map" >
		select distinct t_id from examine_record where a_id = #{aId,jdbcType=BIGINT} and type = #{type,jdbcType=INTEGER}
	</select>
	
	<select id="selectAllList" resultMap="BaseResultMap" parameterType="java.util.Map" >
	  	select 
	    <include refid="base_columns" />
	      from examine_record
	     <where>
			<if test="taskId != null">
				and t_id = #{taskId,jdbcType=BIGINT}
			</if>
			<if test="type != null">
				and type = #{type,jdbcType=INTEGER}
			</if>
			<if test="catagory != null">
				and catagory = #{catagory,jdbcType=INTEGER}
			</if>
			<if test="startCreateTime != null and startCreateTime != ''">
				and create_time &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="endCreateTime != null and endCreateTime != ''">
				and create_time &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="state != null">
				and state = #{state,jdbcType=INTEGER}
			</if>
			<if test="catagorys != null">
				and catagory &lt;= #{catagorys,jdbcType=INTEGER}
			</if>
			<if test="taskType != null">
				and task_type = #{taskType,jdbcType=INTEGER}
			</if>
			
	      </where>
	      
		  <choose>
	  		<when test="custom_order_sql != null">
	  			order by ${custom_order_sql}
	  		</when>
	  		<otherwise>
	  			order by id desc
	  		</otherwise>
	 	 </choose>
	  </select>
	
	  <insert id="batchAdd" parameterType="java.util.List">
		insert into examine_record (t_id, a_id, state, remark, create_time, type, catagory, task_type) values
		<foreach collection="list" item="item" separator=",">
			(#{item.tId,jdbcType=BIGINT}, #{item.aId,jdbcType=BIGINT}, #{item.state,jdbcType=INTEGER},
			 #{item.remark,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.type,jdbcType=INTEGER}, #{item.catagory,jdbcType=INTEGER}, 
			 #{item.taskType,jdbcType=INTEGER})
		</foreach>
	 </insert> 
	
	
</mapper>