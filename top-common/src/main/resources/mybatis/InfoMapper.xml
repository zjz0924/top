<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wow.common.dao.InfoDao">
	<resultMap id="BaseResultMap" type="cn.wow.common.domain.Info">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="v_id" property="vId" jdbcType="BIGINT" />
		<result column="p_id" property="pId" jdbcType="BIGINT" />
		<result column="m_id" property="mId" jdbcType="BIGINT" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		
		<association property="vehicle" javaType="cn.wow.common.domain.Vehicle" column="v_id" select="cn.wow.common.dao.VehicleDao.selectOne"/>
		<association property="parts" javaType="cn.wow.common.domain.Parts" column="p_id" select="cn.wow.common.dao.PartsDao.selectOne"/>
		<association property="material" javaType="cn.wow.common.domain.Material" column="m_id" select="cn.wow.common.dao.MaterialDao.selectOne"/>
	</resultMap>
	
	<sql id="base_columns">
		id, v_id, p_id, m_id, type, state, remark, create_time
	</sql>
	
	<select id="selectOne" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="base_columns" /> from info
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from info
		where id = #{id,jdbcType=BIGINT}
	</delete>
	
	<insert id="insert" parameterType="cn.wow.common.domain.Info">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
			SELECT @@IDENTITY
		</selectKey>
		
		insert into info (v_id, p_id, m_id, type, state, remark, create_time)
			values (#{vId,jdbcType=BIGINT}, #{pId,jdbcType=BIGINT}, #{mId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{state,jdbcType=INTEGER},
				#{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	
	<update id="update" parameterType="cn.wow.common.domain.Info">
		update info
		<set>
			<if test="vId != null">
				v_id = #{vId,jdbcType=BIGINT},
			</if>
			<if test="pId != null">
				p_id = #{pId,jdbcType=BIGINT},
			</if>
			<if test="mId != null">
				m_id = #{mId,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	 <select id="selectAllList" resultMap="BaseResultMap" parameterType="java.util.Map" >
	  	select 
	    <include refid="base_columns" />
	      from info
	     <where>
			<if test="vId != null">
				and v_id = #{vId,jdbcType=BIGINT}
			</if>
			<if test="pId != null">
				and p_id = #{pId,jdbcType=BIGINT}
			</if>
			<if test="mId != null">
				and m_id = #{mId,jdbcType=BIGINT}
			</if>
			<if test="type != null">
				and type = #{type,jdbcType=INTEGER}
			</if>
			<if test="state != null">
				and state = #{state,jdbcType=INTEGER}
			</if>
			<if test="startCreateTime != null and startCreateTime != ''">
				and create_time &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="endCreateTime != null and endCreateTime != ''">
				and create_time &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
			</if>
			
			<if test="vIdList != null">
				and v_id in <foreach collection="vIdList" item="id" index="index" separator=","  open= "(" close =")"> #{id} </foreach> 
			</if>
			
			<if test="pIdList != null">
				and p_id in <foreach collection="pIdList" item="id" index="index" separator=","  open= "(" close =")"> #{id} </foreach> 
			</if>
			
			<if test="mIdList != null">
				and m_id in <foreach collection="mIdList" item="id" index="index" separator=","  open= "(" close =")"> #{id} </foreach> 
			</if>
	      </where>
	      
		  <choose>
	  		<when test="custom_order_sql != null">
	  			order by ${custom_order_sql}
	  		</when>
	  		<otherwise>
	  			order by id desc
	  		</otherwise>
	 	 </choose>
	  </select>
	
	  <!-- 获取ID集合 -->
	  <select id="selectIdList" resultType="java.lang.Long" parameterType="java.util.Map" >
	  	SELECT i.id from info i LEFT JOIN vehicle v ON v.id = i.v_id LEFT JOIN parts p ON p.id = i.p_id LEFT JOIN material m ON m.id = i.m_id
	     <where>
			<if test="v_code != null">
				and v.code like concat('%', #{v_code,jdbcType=VARCHAR}, '%')
			</if>
			<if test="v_type != null">
				and v.type like concat('%', #{v_type,jdbcType=VARCHAR}, '%')
			</if>
			<if test="p_code != null">
				and p.code like concat('%', #{p_code,jdbcType=VARCHAR}, '%')
			</if>
			<if test="parts_org != null">
				and p.org_id = #{parts_org,jdbcType=BIGINT}
			</if>
			<if test="state != null">
				and i.state = #{state,jdbcType=INTEGER}
			</if>
	      </where>
	  </select>
	
	
</mapper>